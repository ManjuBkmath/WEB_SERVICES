<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema 
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	targetNamespace="http://www.danielpm1982.com/ShipOrderNamedTypesMethodIndicators"
	xmlns:danielpm1982="http://www.danielpm1982.com/ShipOrderNamedTypesMethodIndicators"
	elementFormDefault="qualified">
	<xs:simpleType name="stringType">
		<xs:restriction base="xs:string" />
	</xs:simpleType>
	<xs:simpleType name="booleanType">
		<xs:restriction base="xs:boolean" />
	</xs:simpleType>
	<xs:simpleType name="intType">
	  	<xs:restriction base="xs:positiveInteger" />
	</xs:simpleType>
	<xs:simpleType name="decType">
	  	<xs:restriction base="xs:decimal" />
	</xs:simpleType>
	<xs:simpleType name="dateTimeType">
		<xs:restriction base="xs:dateTime" />
	</xs:simpleType>
	<xs:attribute name="orderId" type="danielpm1982:stringType" />
	<xs:attribute name="orderPayed" type="danielpm1982:booleanType" />
	<xs:attribute name="orderProcessed" type="danielpm1982:booleanType" />
	<xs:attribute name="orderShipped" type="danielpm1982:booleanType" />
	<xs:attribute name="orderDelivered" type="danielpm1982:booleanType" />
	<xs:attribute name="orderListId" type="danielpm1982:stringType" />
	<xs:complexType name="shipToType">
<!-- The <all> indicator specifies that the child elements can appear in any order, and that each child element must occur at most once (minOccurs can be 0 or 1; maxOccurs can only be 1). The occurrence number for the "all" set itself, can only be 1 (at least and at most).-->
		<xs:all minOccurs="1" maxOccurs="1">
		    <xs:element name="name" type="danielpm1982:stringType" minOccurs="1" maxOccurs="1" />
		    <xs:element name="address" type="danielpm1982:stringType" minOccurs="1" />
		    <xs:element name="email" type="danielpm1982:stringType" minOccurs="1" />
		    <xs:element name="city" type="danielpm1982:stringType" minOccurs="1" />
		    <xs:element name="state" type="danielpm1982:stringType" minOccurs="0" />
		    <xs:element name="country" type="danielpm1982:stringType" minOccurs="1" />
		    <xs:element name="zipCode" type="danielpm1982:intType" minOccurs="0" />
		</xs:all>
	</xs:complexType>
	<xs:complexType name="serviceType">
<!-- The <choice> indicator specifies that either one child element or another can occur (0 or more times), not both, or not more than one different child element at the same instance (except if multiple choices are set, by default at least and at most one choice is set). MaxOccurs define the maximum number of times the choice can occur (>=0, or "unbounded") - default value is 1. MinOccurs define the minimum number of times the choice can occur (>=0) - default value is 1. If only one choice is allowed, at most one of the elements could be chosen (occurrence of 0 or more), but if multiple choices are set, then more than one of the child elements could occur, each with an occurrence of 0 or more on every choice.-->
		<xs:choice minOccurs="0" maxOccurs="1">
			<xs:element name="priorityMailExpress" type="danielpm1982:booleanType" />
			<xs:element name="priorityMail" type="danielpm1982:booleanType" />
			<xs:element name="firstClassMail" type="danielpm1982:booleanType" />
		</xs:choice>
	</xs:complexType>
	<xs:complexType name="itemType">
	  	<xs:all minOccurs="1" maxOccurs="1">
		    <xs:element name="title" type="danielpm1982:stringType" minOccurs="1" maxOccurs="1" />
		    <xs:element name="quantity" type="danielpm1982:intType" minOccurs="1" />
		    <xs:element name="price" type="danielpm1982:decType" minOccurs="0" />
	  	</xs:all>
	</xs:complexType>
<!-- The <group> indicator is used to define related sets of elements. You must define an all, choice, or sequence element inside the group declaration. After you have defined a group, you can reference it in another definition, using the "ref" attribute, as if you were declaring all elements there, as usual. It favors modularization and reuse of the XSD code components (tags). -->
	<xs:group name="clientDataGroup">
		<xs:sequence>
			<xs:element name="client" type="danielpm1982:stringType" maxOccurs="1" />
	    	<xs:element name="shipTo" type="danielpm1982:shipToType" maxOccurs="1" />
		</xs:sequence>
	</xs:group>
	<xs:group name="itemDataGroup">
		<xs:sequence>
			<xs:element name="service" type="danielpm1982:serviceType" maxOccurs="1" />
		    <xs:element name="item" type="danielpm1982:itemType" maxOccurs="unbounded" />
		    <xs:element name="discountTicket" type="danielpm1982:stringType" maxOccurs="1" />
		</xs:sequence>
	</xs:group>
<!-- The <attributeGroup> indicator defines groups of attributes, with no need of any other nested indicator (all, choice or sequence). After you have defined an attribute group, you can reference it in another definition using the "ref" attribute. As with <group>, it favors modularization and reuse of the XSD code components (tags). -->
	<xs:attributeGroup name="shipOrderAttributesGroup">
		<xs:attribute ref="danielpm1982:orderId" use="required" />
		<xs:attribute ref="danielpm1982:orderPayed" use="optional" />
		<xs:attribute ref="danielpm1982:orderProcessed" use="optional" />
		<xs:attribute ref="danielpm1982:orderShipped" use="optional" />
		<xs:attribute ref="danielpm1982:orderDelivered" use="optional" />
	</xs:attributeGroup>
	<xs:complexType name="shipOrderType">
<!-- The <sequence> indicator specifies that the child elements must appear in a specific order, independently from the min or max occurrence of each element. If maxOccurs is set at the sequence (>=0), and if multiple sequences are allowed, then more than one sequence could appear, but with its child elements always respecting the order (despite their individual occurrence number) - default is 1. If minOccurs is set at the sequence, it defines the minimum number of times the sequence can occur (>=0). To specify that this sequence group is optional, set this attribute to zero - default is 1. For the child elements of the sequence, the occurrences can be set individually (>=0).-->
		<xs:sequence>
			<xs:group ref="danielpm1982:clientDataGroup" maxOccurs="1" />
			<xs:group ref="danielpm1982:itemDataGroup" maxOccurs="1" />
			<xs:element name="dateTime" type="danielpm1982:dateTimeType" minOccurs="1" maxOccurs="1" />
		</xs:sequence>
		<xs:attributeGroup ref="danielpm1982:shipOrderAttributesGroup" />
	</xs:complexType>
	<xs:complexType name="shipOrderListType">
  		<xs:sequence minOccurs="1" maxOccurs="unbounded">
			<xs:element name="shipOrder" type="danielpm1982:shipOrderType" />	
  		</xs:sequence>
  		<xs:attribute ref="danielpm1982:orderListId" use="required" />
	</xs:complexType>
	<xs:element name="shipOrderList" type="danielpm1982:shipOrderListType" />
</xs:schema>


<!-- The maxOccurs attribute indicator specifies the maximum number of times an element can occur. If unlimited times, use the value “unbounded”. -->
<!-- The minOccurs attribute indicator specifies the minimum number of times an element can occur. If it can be null (optional), use value “0”, if is required, use “1” or any other positive value, according to requirements. -->

<!-- This other ShipOrder XSD schema version basically exemplifies the use of the 7 indicators available to be used at complex elements/types:
Order: <xs:all>, <xs:choice> and <xs:sequence> ;
Occurrence: minOccurs and maxOccurs ;
Group: <xs:group> and <xs:attributeGroup> .
-->
